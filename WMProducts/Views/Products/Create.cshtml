@model WMProducts.ViewModel.ProductViewModel
@{
    ViewBag.Title = "Create Product";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Products"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2">* Name </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter name..." } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, 4, 40, new { @class = "form-control", placeholder = "Enter description..." })
                @*@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">* Category </label>
            <div class="col-md-10">
                @Html.DropDownListFor(p => p.CategoryId, new SelectList(Model.Categories,"Id","Name"), "-- Please select category --", new { @class = "form-control" })
                @*@Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">* Manufacturer </label>
            <div class="col-md-10">
                @Html.DropDownListFor(p => p.ManufacturerId, new SelectList(Model.Manufacturers, "Id", "Name"), "-- Please select manufacturer --", new { @class = "form-control" })
                @*@Html.DropDownList("ManufacturerId", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.ManufacturerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">* Supplier </label>
            <div class="col-md-10">
                @Html.DropDownListFor(p => p.SupplierId, new SelectList(Model.Suppliers, "Id", "Name"), "-- Please select supplier --", new { @class = "form-control" })
                @*@Html.DropDownList("SupplierId", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">* Price </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter price..." } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
